{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass WdztDirective {\n  constructor(elem) {\n    this.elem = elem;\n  }\n  ngAfterViewInit() {\n    const id = this.elem.nativeElement.id = this.elem.nativeElement.id || WDZT.guid();\n    // const id = this.elem.nativeElement.id = this.elem.nativeElement.id;\n    let ajaxHeaders = {};\n    this.w = WDZT({\n      id: id,\n      imagesPrefix: \"assets/wdzt/images/\",\n      OpenSeadragon: {\n        crossOriginPolicy: \"Anonymous\",\n        loadTilesWithAjax: true,\n        ajaxHeaders: ajaxHeaders\n      },\n      autoAdjustHeight: true\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes[\"manifest\"]) {\n      if (!this.manifest) {\n        return;\n      }\n      try {\n        this.manifest = typeof this.manifest === \"string\" ? JSON.parse(this.manifest) : this.manifest;\n        this.w.open(this.manifest);\n      } catch (er) {\n        // The manifest is probably just a URL, let WDZT deal with it.\n      }\n    }\n  }\n}\nWdztDirective.ɵfac = function WdztDirective_Factory(t) {\n  return new (t || WdztDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nWdztDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: WdztDirective,\n  selectors: [[\"wippWdzt\"]],\n  inputs: {\n    manifest: \"manifest\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\nexport { WdztDirective };","map":{"version":3,"names":["WdztDirective","constructor","elem","ngAfterViewInit","id","nativeElement","WDZT","guid","ajaxHeaders","w","imagesPrefix","OpenSeadragon","crossOriginPolicy","loadTilesWithAjax","autoAdjustHeight","ngOnChanges","changes","manifest","JSON","parse","open","er","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs","features","ɵɵNgOnChangesFeature"],"sources":["/Users/akshat.saini/Documents/repo/wdzt-wrapper/src/app/wdzt/wdzt.directive.ts"],"sourcesContent":["import {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"wippWdzt\",\n})\nexport class WdztDirective implements AfterViewInit, OnChanges {\n  @Input() public manifest: any;\n  private w: any;\n\n  constructor(private elem: ElementRef) {}\n\n  ngAfterViewInit() {\n    const id = (this.elem.nativeElement.id =\n      this.elem.nativeElement.id || WDZT.guid());\n    // const id = this.elem.nativeElement.id = this.elem.nativeElement.id;\n    let ajaxHeaders = {};\n\n    this.w = WDZT({\n      id: id,\n      imagesPrefix: \"assets/wdzt/images/\",\n      OpenSeadragon: {\n        crossOriginPolicy: \"Anonymous\",\n        loadTilesWithAjax: true,\n        ajaxHeaders: ajaxHeaders,\n      },\n      autoAdjustHeight: true,\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"manifest\"]) {\n      if (!this.manifest) {\n        return;\n      }\n      try {\n        this.manifest =\n          typeof this.manifest === \"string\"\n            ? JSON.parse(this.manifest)\n            : this.manifest;\n        this.w.open(this.manifest);\n      } catch (er) {\n        // The manifest is probably just a URL, let WDZT deal with it.\n      }\n    }\n  }\n}\n"],"mappings":";AAWA,MAGaA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,eAAeA,CAAA;IACb,MAAMC,EAAE,GAAI,IAAI,CAACF,IAAI,CAACG,aAAa,CAACD,EAAE,GACpC,IAAI,CAACF,IAAI,CAACG,aAAa,CAACD,EAAE,IAAIE,IAAI,CAACC,IAAI,EAAG;IAC5C;IACA,IAAIC,WAAW,GAAG,EAAE;IAEpB,IAAI,CAACC,CAAC,GAAGH,IAAI,CAAC;MACZF,EAAE,EAAEA,EAAE;MACNM,YAAY,EAAE,qBAAqB;MACnCC,aAAa,EAAE;QACbC,iBAAiB,EAAE,WAAW;QAC9BC,iBAAiB,EAAE,IAAI;QACvBL,WAAW,EAAEA;OACd;MACDM,gBAAgB,EAAE;KACnB,CAAC;EACJ;EAEAC,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,UAAU,CAAC,EAAE;MACvB,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClB;;MAEF,IAAI;QACF,IAAI,CAACA,QAAQ,GACX,OAAO,IAAI,CAACA,QAAQ,KAAK,QAAQ,GAC7BC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACF,QAAQ,CAAC,GACzB,IAAI,CAACA,QAAQ;QACnB,IAAI,CAACR,CAAC,CAACW,IAAI,CAAC,IAAI,CAACH,QAAQ,CAAC;OAC3B,CAAC,OAAOI,EAAE,EAAE;QACX;MAAA;;EAGN;;AAvCWrB,aAAa,C;mBAAbA,aAAa,EAAAsB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;AAAbxB,aAAa,C;QAAbA,aAAa;EAAAyB,SAAA;EAAAC,MAAA;IAAAT,QAAA;EAAA;EAAAU,QAAA,GAAAL,EAAA,CAAAM,oBAAA;AAAA;SAAb5B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}